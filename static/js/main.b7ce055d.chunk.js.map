{"version":3,"sources":["App.js","components/Placeholder.js","reportWebVitals.js","index.js"],"names":["App","props","state","input","handleChange","bind","getMarkdownText","raw","marked","setOptions","breaks","__html","sanitize","event","this","setState","target","value","className","class","id","onChange","dangerouslySetInnerHTML","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAmDeA,E,kDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MCTW,spCDWb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBANN,E,mDASnB,SAAgBE,GAKd,OAJAC,IAAOC,WAAW,CAChBC,QAAQ,IAGH,CAAEC,OADOH,IAAOD,EAAK,CAAEK,UAAU,O,0BAI1C,SAAaC,GACXC,KAAKC,SAAS,CACZZ,MAAOU,EAAMG,OAAOC,U,oBAGxB,WACE,OACE,sBAAKC,UAAU,kBAAf,UACE,gCACA,oBAAIA,UAAU,uBAAd,6BACA,oBAAGA,UAAU,+CAAb,gDACA,uBADA,qDAKA,qBAAKA,UAAU,YAAf,SACE,sBAAKC,MAAM,MAAX,UACE,qBAAKA,MAAM,YAAX,SACE,0BAAUC,GAAG,SAASH,MAAOH,KAAKZ,MAAMC,MAAQkB,SAAUP,KAAKV,iBAEjE,qBAAKgB,GAAG,UAAUF,UAAU,iBAAiBI,wBAAyBR,KAAKR,gBAAgBQ,KAAKZ,MAAMC,qB,GAtChGoB,IAAMC,WEOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7ce055d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport marked from 'marked';\nimport Placeholder from './components/Placeholder'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: Placeholder,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getMarkdownText = this.getMarkdownText.bind(this);\n  }\n\n  getMarkdownText(raw) {\n    marked.setOptions({\n      breaks: true\n    })    \n    var rawMarkup = marked(raw, { sanitize: true });\n    return { __html: rawMarkup };\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n  render() {\n    return (\n      <div className=\"bg-light layout\">\n        <div >\n        <h1 className=\"pt-2 text-center  h4\">Markdown Editor</h1>\n        <p className=\"font-weight-light text-secondary text-center\">Markdown is a cool markup language.\n        <br /> I\n         built this for FCC, hence the Test Suite.</p>\n  \n        </div>\n        <div className=\"container\">\n          <div class=\"row\">\n            <div class=\"col-sm-12\">\n              <textarea id=\"editor\" value={this.state.input}  onChange={this.handleChange}  />\n            </div>\n            <div id=\"preview\" className=\"col-sm-12 pt-3\" dangerouslySetInnerHTML={this.getMarkdownText(this.state.input)} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const Placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/4/48/Markdown-mark.svg)\n`;\nexport default Placeholder;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}